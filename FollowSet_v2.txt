program $
moduleDeclarations DRIVERDEF DEF
moduleDeclaration DECLARE DRIVERDEF DEF
otherModules DRIVERDEF $
driverModule DEF $
module DEF DRIVERDEF $
ret START
input_plist SQBC
input_plist2 SQBC
output_plist SQBC
output_plist2 SQBC
dataType SEMICOL COMMA SQBC
type COMMA SEMICOL SQBC
moduleDef DEF DRIVERDEF $
statements END BREAK
statement GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
ioStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
var BC MUL DIV PLUS MINUS LT LE GT GE EQ NE AND OR SEMICOL
whichId BC MUL DIV PLUS MINUS LT LE GT GE EQ NE AND OR SEMICOL
simpleStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
assignmentStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
whichStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
lvalueIDStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
lvalueARRStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
index1 SQBC
moduleReuseStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
optional USE
idList COLON SQBC SEMICOL
idList2 COLON SQBC SEMICOL
expression SEMICOL
booleanOrNonBooleanArithmeticExpr LT LE GT GE EQ NE SEMICOL AND OR BC
arithmeticOrBooleanExpr	BC SEMICOL
arithmeticOrBooleanExpr2 BC SEMICOL
expressionWithLogOp BC SEMICOL
anyTerm	AND OR BC SEMICOL
anyTerm2 AND OR BC SEMICOL
expressionWithRelOp AND OR BC SEMICOL
negOrPosArithmeticExpr	LT LE GT GE EQ NE AND OR BC SEMICOL
arithmeticExpr LT LE GT GE EQ NE BC AND OR SEMICOL
arithmeticExpr2	LT LE GT GE EQ NE BC AND OR SEMICOL
term PLUS MINUS LT LE GT GE EQ NE BC AND OR SEMICOL
term2 PLUS MINUS LT LE GT GE EQ NE BC AND OR SEMICOL
factor MUL DIV PLUS MINUS LT LE GT GE EQ NE BC AND OR SEMICOL
op1 ID NUM RNUM FALSE TRUE BO
op2 ID NUM RNUM FALSE TRUE BO
logicalOp ID NUM RNUM FALSE TRUE BO
relationalOp ID NUM RNUM FALSE TRUE MINUS BO
declareStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
conditionalStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
caseStmts END DEFAULT
caseStmt END DEFAULT
value COLON
default1 END
iterativeStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
range BC SQBC
