DECLARE declare 1
MODULE module 1
ID compute 1
SEMICOL ; 1
DRIVERDEF <<< 2
DRIVER driver 2
PROGRAM program 2
DRIVERENDDEF >>> 2
START start 3
DECLARE declare 4
ID var_1_ 4
COMMA , 4
ID var_2_ 4
COMMA , 4
ID var_3_ 4
COLON : 4
INTEGER integer 4
SEMICOL ; 4
DECLARE declare 5
ID R1_abc 5
COLON : 5
BOOLEAN boolean 5
SEMICOL ; 5
DECLARE declare 6
ID r2_ABC 6
COLON : 6
INTEGER integer 6
SEMICOL ; 6
DECLARE declare 7
ID R3_abc 7
COLON : 7
REAL real 7
SEMICOL ; 7
GET_VALUE get_value 8
BO ( 8
ID var_1_ 8
BC ) 8
SEMICOL ; 8
ID var_2_ 9
ASSIGNOP := 9
NUM 10 9
SEMICOL ; 9
ID var_3_ 10
ASSIGNOP := 10
MINUS - 10
BO ( 10
NUM 6 10
BC ) 10
SEMICOL ; 10
SQBO [ 11
ID R1_abc 11
COMMA , 11
ID r2_ABC 11
COMMA , 11
ID R3_abc 11
SQBC ] 11
ASSIGNOP := 11
USE use 11
MODULE module 11
ID compute 11
WITH with 11
PARAMETERS parameters 11
ID var_1_ 11
COMMA , 11
ID var_2_ 11
COMMA , 11
ID var_34 11
SEMICOL ; 11
COMMENTMARK ** 12
COMMENTMARK ** 12
END end 13
DEF << 14
MODULE module 14
ID compute 14
ENDDEF >> 14
TAKES takes 15
INPUT input 15
SQBO [ 15
ID a 15
COLON : 15
INTEGER integer 15
COMMA , 15
ID b 15
COLON : 15
INTEGER integer 15
COMMA , 15
ID c 15
COLON : 15
INTEGER integer 15
SQBC ] 15
SEMICOL ; 15
RETURNS returns 16
SQBO [ 16
ID res_1 16
COLON : 16
BOOLEAN boolean 16
COMMA , 16
ID res_2_a 16
COLON : 16
INTEGER integer 16
COMMA , 16
ID res_2__b 16
COLON : 16
REAL real 16
SQBC ] 16
SEMICOL ; 16
START start 17
DECLARE declare 18
ID b 18
COLON : 18
BOOLEAN boolean 18
SEMICOL ; 18
ID res_2_a 19
ASSIGNOP := 19
MINUS - 19
BO ( 19
ID a 19
MUL * 19
ID b 19
MINUS - 19
ID c 19
DIV / 19
NUM 5 19
BC ) 19
SEMICOL ; 19
ID res_2__b 20
ASSIGNOP := 20
BO ( 20
NUM 12 20
PLUS + 20
RNUM 22.34E-2 20
BC ) 20
SEMICOL ; 20
COMMENTMARK ** 21
COMMENTMARK ** 21
PRINT print 22
BO ( 22
ID res_1 22
BC ) 22
SEMICOL ; 22
END end 23
