DECLARE declare 1
MODULE module 1
ID readArr 1
SEMICOL ; 1
COMMENTMARK ** 2
COMMENTMARK ** 2
DEF << 3
MODULE module 3
ID arraySum 3
ENDDEF >> 3
TAKES takes 4
INPUT input 4
SQBO [ 4
ID list 4
COLON : 4
ARRAY array 4
SQBO [ 4
NUM 1 4
RANGEOP .. 4
NUM 15 4
SQBC ] 4
OF of 4
REAL real 4
COMMA , 4
ID n 4
COLON : 4
INTEGER integer 4
SQBC ] 4
SEMICOL ; 4
RETURNS returns 5
SQBO [ 5
ID sum 5
COLON : 5
REAL real 5
SQBC ] 5
SEMICOL ; 5
START start 6
DECLARE declare 7
ID index 7
COLON : 7
INTEGER integer 7
SEMICOL ; 7
DECLARE declare 8
ID t 8
COLON : 8
BOOLEAN boolean 8
SEMICOL ; 8
ID sum 9
ASSIGNOP := 9
RNUM 0.0 9
SEMICOL ; 9
FOR for 10
BO ( 10
ID index 10
IN in 10
NUM 1 10
RANGEOP .. 10
NUM 15 10
BC ) 10
START start 11
ID t 12
ASSIGNOP := 12
ID index 12
LE <= 12
ID n 12
SEMICOL ; 12
COMMENTMARK ** 13
COMMENTMARK ** 13
END end 14
PRINT print 15
BO ( 15
ID sum 15
BC ) 15
SEMICOL ; 15
END end 16
DRIVERDEF <<< 17
DRIVER driver 17
PROGRAM program 17
DRIVERENDDEF >>> 17
START start 18
DECLARE declare 19
ID A 19
COLON : 19
ARRAY array 19
SQBO [ 19
NUM 1 19
RANGEOP .. 19
NUM 15 19
SQBC ] 19
OF of 19
REAL real 19
SEMICOL ; 19
DECLARE declare 20
ID k 20
COLON : 20
INTEGER integer 20
SEMICOL ; 20
DECLARE declare 21
ID s 21
COLON : 21
REAL real 21
SEMICOL ; 21
GET_VALUE get_value 22
BO ( 22
ID k 22
BC ) 22
SEMICOL ; 22
USE use 23
MODULE module 23
ID readArr 23
WITH with 23
PARAMETERS parameters 23
ID A 23
COMMA , 23
ID k 23
SEMICOL ; 23
SQBO [ 24
ID s 24
SQBC ] 24
ASSIGNOP := 24
USE use 24
MODULE module 24
ID arraySum 24
WITH with 24
PARAMETERS parameters 24
ID A 24
COMMA , 24
ID k 24
SEMICOL ; 24
PRINT print 25
BO ( 25
ID s 25
BC ) 25
SEMICOL ; 25
END end 26
COMMENTMARK ** 28
COMMENTMARK ** 28
COMMENTMARK ** 29
COMMENTMARK ** 29
COMMENTMARK ** 30
COMMENTMARK ** 30
COMMENTMARK ** 31
COMMENTMARK ** 31
DEF << 33
MODULE module 33
ID readArr 33
ENDDEF >> 33
TAKES takes 34
INPUT input 34
SQBO [ 34
ID arr1 34
COLON : 34
ARRAY array 34
SQBO [ 34
NUM 1 34
RANGEOP .. 34
NUM 15 34
SQBC ] 34
OF of 34
REAL real 34
COMMA , 34
ID k 34
COLON : 34
INTEGER integer 34
SQBC ] 34
SEMICOL ; 34
START start 35
DECLARE declare 36
ID tempvar 36
COLON : 36
REAL real 36
SEMICOL ; 36
DECLARE declare 37
ID i 37
COLON : 37
INTEGER integer 37
SEMICOL ; 37
ID i 38
ASSIGNOP := 38
NUM 1 38
SEMICOL ; 38
WHILE while 39
BO ( 39
ID i 39
LE <= 39
ID k 39
BC ) 39
START start 40
GET_VALUE get_value 41
BO ( 41
ID tempvar 41
BC ) 41
SEMICOL ; 41
ID arr1 42
SQBO [ 42
ID i 42
SQBC ] 42
ASSIGNOP := 42
ID tempvar 42
SEMICOL ; 42
ID i 43
ASSIGNOP := 43
ID i 43
PLUS + 43
NUM 1 43
SEMICOL ; 43
COMMENTMARK ** 44
COMMENTMARK ** 44
END end 45
END end 46
